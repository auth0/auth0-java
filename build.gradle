plugins {
    id 'java'
    id 'jacoco'
    id 'me.champeau.gradle.japicmp' version '0.2.9'
    id 'java-gradle-plugin'
    id "com.gradle.plugin-publish" version "0.12.0"
}

repositories {
    jcenter()
    google()
    gradlePluginPortal()
    mavenCentral()
}

import me.champeau.gradle.japicmp.JapicmpTask


apply from: rootProject.file('gradle/versioning.gradle')

version = getVersionFromFile()
group = 'com.auth0'
logger.lifecycle("Using version ${version} for ${name} group $group")

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

compileJava {
    sourceCompatibility '1.8'
    targetCompatibility '1.8'

    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked" << "-Werror"
}

compileTestJava {
    options.compilerArgs << "-Xlint:deprecation" << "-Werror"
}

// Define or replace this method with the actual implementation
def baselineJarPath = file("$rootDir/libs/baseline-version.jar")

task('apiDiff', type: JapicmpTask, dependsOn: 'jar') {
  oldClasspath = files(baselineJarPath)
  newClasspath = files(jar.archiveFile)
  onlyModified = true
  failOnModification = true
  ignoreMissingClasses = true
  htmlOutputFile = file("$buildDir/reports/apiDiff/apiDiff.html")
  txtOutputFile = file("$buildDir/reports/apiDiff/apiDiff.txt")
  doLast {
    project.logger.quiet("Comparing against manually specified baseline JAR at ${baselineJarPath}")
  }
}

test {
    testLogging {
        events "skipped", "failed"
        exceptionFormat "short"
    }
    useJUnitPlatform()
}

ext {
    okhttpVersion = '4.11.0'
    hamcrestVersion = '2.2'
    jupiterVersion = '5.9.3'
}

dependencies {
    // TODO remove direct dependency when OkHttp 4.12.0 is released
    implementation ("com.squareup.okhttp3:okhttp:${okhttpVersion}") {
      exclude group: 'com.squareup.okhttp3', module: 'okio'
    }
    implementation "com.squareup.okio:okio:3.5.0"
    implementation "me.champeau.gradle:japicmp-gradle-plugin:0.2.9"

    implementation "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.15.0"
    implementation "com.auth0:java-jwt:4.4.0"
    implementation "net.jodah:failsafe:2.4.4"

    testImplementation "org.bouncycastle:bcprov-jdk15on:1.70"
    testImplementation "org.mockito:mockito-core:4.8.1"
    testImplementation "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"
    testImplementation "org.hamcrest:hamcrest:${hamcrestVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"

    // Override MockWebServer's junit transitive dependency to latest v4
    constraints {
      testImplementation( group: 'junit', name: 'junit'){
        version{
          strictly "[4.13.2]"
        }
      }
    }
}

//apply from: rootProject.file('gradle/jacoco.gradle')
apply from: rootProject.file('gradle/maven-publish.gradle')
