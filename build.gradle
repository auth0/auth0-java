
plugins {
    id 'java'
    id 'jacoco'
    id 'com.auth0.gradle.oss-library.java'
}

repositories {
    mavenCentral()
}

group = 'com.auth0'
logger.lifecycle("Using version ${version} for ${name} group $group")

oss {
    name 'auth0'
    repository 'auth0-java'
    organization 'auth0'
    description 'Java client library for the Auth0 platform.'
    baselineCompareVersion '1.27.0'

    developers {
        auth0 {
            displayName = 'Auth0'
            email = 'oss@auth0.com'
        }
        lbalmaceda {
            displayName = 'Luciano Balmaceda'
            email = 'luciano.balmaceda@auth0.com'
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

compileJava {
    sourceCompatibility '1.8'
    targetCompatibility '1.8'

    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked" << "-Werror"
}

compileTestJava {
    options.compilerArgs << "-Xlint:deprecation" << "-Werror"
}

test {
    testLogging {
        events "skipped", "failed"
        exceptionFormat "short"
    }
}

ext {
    okhttpVersion = '4.10.0'
    hamcrestVersion = '2.2'
}

dependencies {
    implementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.13.4.2"
    implementation "com.auth0:java-jwt:3.19.3"
    implementation "net.jodah:failsafe:2.4.1"

    testImplementation "org.bouncycastle:bcprov-jdk15on:1.68"
    testImplementation "org.mockito:mockito-core:3.7.7"
    testImplementation "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"
    testImplementation "org.hamcrest:hamcrest-core:${hamcrestVersion}"
    testImplementation "org.hamcrest:hamcrest-library:${hamcrestVersion}"
    testImplementation "junit:junit:4.13.1"
}

// Creates a version.txt file containing the current version of the SDK.
// This file is picked up and parsed by our Ship Orb to determine the version.
task exportVersion()  {
  doLast {
    new File(rootDir, "version.txt").text = "$version"
  }
}
